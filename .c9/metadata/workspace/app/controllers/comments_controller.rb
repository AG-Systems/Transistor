{"filter":false,"title":"comments_controller.rb","tooltip":"/app/controllers/comments_controller.rb","undoManager":{"mark":55,"position":55,"stack":[[{"start":{"row":3,"column":0},"end":{"row":22,"column":0},"action":"remove","lines":["  # GET /comments","  # GET /comments.json","  def index","    @comments = Comment.all","  end","","  # GET /comments/1","  # GET /comments/1.json","  def show","  end","","  # GET /comments/new","  def new","    @comment = Comment.new","  end","","  # GET /comments/1/edit","  def edit","  end",""],"id":2}],[{"start":{"row":2,"column":0},"end":{"row":5,"column":23},"action":"remove","lines":["","","  # POST /comments","  # POST /comments.json"],"id":3}],[{"start":{"row":19,"column":0},"end":{"row":29,"column":5},"action":"remove","lines":["  def update","    respond_to do |format|","      if @comment.update(comment_params)","        format.html { redirect_to @comment, notice: 'Comment was successfully updated.' }","        format.json { render :show, status: :ok, location: @comment }","      else","        format.html { render :edit }","        format.json { render json: @comment.errors, status: :unprocessable_entity }","      end","    end","  end"],"id":4}],[{"start":{"row":18,"column":30},"end":{"row":19,"column":0},"action":"remove","lines":["",""],"id":5}],[{"start":{"row":17,"column":0},"end":{"row":21,"column":27},"action":"remove","lines":["  # PATCH/PUT /comments/1","  # PATCH/PUT /comments/1.json","","  # DELETE /comments/1","  # DELETE /comments/1.json"],"id":6}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":36,"column":0},"action":"remove","lines":["class CommentsController < ApplicationController","  before_action :set_comment, only: [:show, :edit, :update, :destroy]","","  def create","    @comment = Comment.new(comment_params)","","    respond_to do |format|","      if @comment.save","        format.html { redirect_to @comment, notice: 'Comment was successfully created.' }","        format.json { render :show, status: :created, location: @comment }","      else","        format.html { render :new }","        format.json { render json: @comment.errors, status: :unprocessable_entity }","      end","    end","  end","","  def destroy","    @comment.destroy","    respond_to do |format|","      format.html { redirect_to comments_url, notice: 'Comment was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_comment","      @comment = Comment.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def comment_params","      params.require(:comment).permit(:post_id, :body, :user_id)","    end","end",""],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":3},"action":"insert","lines":["class CommentsController < ApplicationController","  before_action :set_comment, only: [:show, :edit, :update, :destroy]","  before_filter :authenticate_user!","","  def create","    @link = Link.find(params[:link_id])","    @comment = @link.comments.new(comment_params)","    @comment.user = current_user","","    respond_to do |format|","      if @comment.save","        format.html { redirect_to @link, notice: 'Comment was successfully created.' }","        format.json { render json: @comment, status: :created, location: @comment }","      else","        format.html { render action: \"new\" }","        format.json { render json: @comment.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /comments/1","  # DELETE /comments/1.json","  def destroy","    @comment.destroy","    respond_to do |format|","      format.html { redirect_to :back, notice: 'Comment was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_comment","      @comment = Comment.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def comment_params","      params.require(:comment).permit(:link_id, :body, :user_id)","    end","end"],"id":9}],[{"start":{"row":38,"column":42},"end":{"row":38,"column":43},"action":"remove","lines":["k"],"id":10}],[{"start":{"row":38,"column":41},"end":{"row":38,"column":42},"action":"remove","lines":["n"],"id":11}],[{"start":{"row":38,"column":40},"end":{"row":38,"column":41},"action":"remove","lines":["i"],"id":12}],[{"start":{"row":38,"column":39},"end":{"row":38,"column":40},"action":"remove","lines":["l"],"id":13}],[{"start":{"row":38,"column":39},"end":{"row":38,"column":40},"action":"insert","lines":["p"],"id":14}],[{"start":{"row":38,"column":40},"end":{"row":38,"column":41},"action":"insert","lines":["o"],"id":15}],[{"start":{"row":38,"column":41},"end":{"row":38,"column":42},"action":"insert","lines":["s"],"id":16}],[{"start":{"row":38,"column":42},"end":{"row":38,"column":43},"action":"insert","lines":["t"],"id":17}],[{"start":{"row":5,"column":8},"end":{"row":5,"column":9},"action":"remove","lines":["k"],"id":18}],[{"start":{"row":5,"column":7},"end":{"row":5,"column":8},"action":"remove","lines":["n"],"id":19}],[{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"remove","lines":["i"],"id":20}],[{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"remove","lines":["l"],"id":21}],[{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"insert","lines":["p"],"id":22}],[{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"insert","lines":["o"],"id":23}],[{"start":{"row":5,"column":7},"end":{"row":5,"column":8},"action":"insert","lines":["s"],"id":24}],[{"start":{"row":5,"column":8},"end":{"row":5,"column":9},"action":"insert","lines":["t"],"id":25}],[{"start":{"row":5,"column":15},"end":{"row":5,"column":16},"action":"remove","lines":["k"],"id":26}],[{"start":{"row":5,"column":14},"end":{"row":5,"column":15},"action":"remove","lines":["n"],"id":27}],[{"start":{"row":5,"column":13},"end":{"row":5,"column":14},"action":"remove","lines":["i"],"id":28}],[{"start":{"row":5,"column":12},"end":{"row":5,"column":13},"action":"remove","lines":["L"],"id":29}],[{"start":{"row":5,"column":12},"end":{"row":5,"column":13},"action":"insert","lines":["P"],"id":30}],[{"start":{"row":5,"column":13},"end":{"row":5,"column":14},"action":"insert","lines":["o"],"id":31}],[{"start":{"row":5,"column":14},"end":{"row":5,"column":15},"action":"insert","lines":["s"],"id":32}],[{"start":{"row":5,"column":15},"end":{"row":5,"column":16},"action":"insert","lines":["t"],"id":33}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"remove","lines":["k"],"id":34}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"remove","lines":["n"],"id":35}],[{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"remove","lines":["i"],"id":36}],[{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"remove","lines":["l"],"id":37}],[{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"insert","lines":["p"],"id":38}],[{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"insert","lines":["o"],"id":39}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"insert","lines":["s"],"id":40}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"insert","lines":["t"],"id":41}],[{"start":{"row":11,"column":38},"end":{"row":11,"column":39},"action":"remove","lines":["k"],"id":42}],[{"start":{"row":11,"column":37},"end":{"row":11,"column":38},"action":"remove","lines":["n"],"id":43}],[{"start":{"row":11,"column":36},"end":{"row":11,"column":37},"action":"remove","lines":["i"],"id":44}],[{"start":{"row":11,"column":35},"end":{"row":11,"column":36},"action":"remove","lines":["l"],"id":45}],[{"start":{"row":11,"column":35},"end":{"row":11,"column":36},"action":"insert","lines":["p"],"id":46}],[{"start":{"row":11,"column":36},"end":{"row":11,"column":37},"action":"insert","lines":["o"],"id":47}],[{"start":{"row":11,"column":37},"end":{"row":11,"column":38},"action":"insert","lines":["s"],"id":48}],[{"start":{"row":11,"column":38},"end":{"row":11,"column":39},"action":"insert","lines":["t"],"id":49}],[{"start":{"row":5,"column":33},"end":{"row":5,"column":34},"action":"remove","lines":["k"],"id":50}],[{"start":{"row":5,"column":32},"end":{"row":5,"column":33},"action":"remove","lines":["n"],"id":51}],[{"start":{"row":5,"column":31},"end":{"row":5,"column":32},"action":"remove","lines":["i"],"id":52}],[{"start":{"row":5,"column":30},"end":{"row":5,"column":31},"action":"remove","lines":["l"],"id":53}],[{"start":{"row":5,"column":30},"end":{"row":5,"column":31},"action":"insert","lines":["p"],"id":54}],[{"start":{"row":5,"column":31},"end":{"row":5,"column":32},"action":"insert","lines":["o"],"id":55}],[{"start":{"row":5,"column":32},"end":{"row":5,"column":33},"action":"insert","lines":["s"],"id":56}],[{"start":{"row":5,"column":33},"end":{"row":5,"column":34},"action":"insert","lines":["t"],"id":57}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":34},"end":{"row":5,"column":34},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1466332298150,"hash":"898ff0c6dd825336c5510ccfd9a03a5642f53fdf"}